# ("\n" next line char cannot be typed in command line if you want to test using rostopic pub ........ )
CMDS_EOM: ";" # note: Change it to something else for testing in command line 

CONNECT: 1 # ROS1 connection flag

# Medical Image Plan module communication configs

PORT_OUT_MEDIMG: 8059 # Port number for data stream out from ROS
PORT_IN_MEDIMG: 8057 # Port number for data stream into ROS
PORT_OUT_NNBLC_MEDIMG: 8083 # Port number for data stream out from ROS in high frequency
IP_OUT_NNBLC_MEDIMG: "127.0.0.1"
IP_OUT_MEDIMG: "127.0.0.1"
IP_IN_MEDIMG: "127.0.0.1"
MSG_END_MEDIMG: "_msg_end__" # communication messege starts with this means end the port
MSG_SIZE_MEDIMG: 256 # change the ros_side_in.hpp and ros_side_out.hpp {boost::array<char, ...> recv_buffer_} field when chaning this number
PUBLISHER_NAME_MEDIMG: "/MedImgComm/msg_received" # Messege ROS publisher name (ROSSideIn received)
SUBSCRIBER_NAME_MEDIMG: "/MedImgComm/msg_to_send" # Messege ROS subscriber name (ROSSideOut to send)
SUBSCRIBER_HIF_NAME_MEDIMG: "/MedImgComm/msg_to_send_hi_f" # Messege ROS subscriber name (ROSSideOut to send at high frequency)
VERBOSE_MEDIMG: 1
VERBOSE_HIF_MEDIMG: 0

# Robot Control module communication configs

PORT_OUT_ROBCTRL: 8063 # Port number for data stream out from ROS
PORT_IN_ROBCTRL: 8072 # Port number for data stream into ROS
IP_OUT_ROBCTRL: "127.0.0.1"
IP_IN_ROBCTRL: "127.0.0.1"
MSG_END_ROBCTRL: "_msg_end__" # communication messege starts with this means end the port
MSG_SIZE_ROBCTRL: 256 # change the ros_side_in.hpp and ros_side_out.hpp {boost::array<char, ...> recv_buffer_} field when chaning this number
PUBLISHER_NAME_ROBCTRL: "/RobCtrlComm/msg_received" # Messege ROS publisher name (ROSSideIn received)
SUBSCRIBER_NAME_ROBCTRL: "/RobCtrlComm/msg_to_send" # Messege ROS subscriber name (ROSSideOut to send)
VERBOSE_ROBCTRL: 1

# Target Visualization module communication configs

PORT_OUT_TARGETVIZ: 8069 # Port number for data stream out from ROS
PORT_IN_TARGETVIZ: 8077 # Port number for data stream into ROS
PORT_OUT_NNBLC_TARGETVIZ: 8079 # Port number for data stream out from ROS in high frequency
IP_OUT_NNBLC_TARGETVIZ: "127.0.0.1"
IP_OUT_TARGETVIZ: "127.0.0.1"
IP_IN_TARGETVIZ: "127.0.0.1"
MSG_END_TARGETVIZ: "_msg_end__" # communication messege starts with this means end the port
MSG_SIZE_TARGETVIZ: 256 # change the ros_side_in.hpp and ros_side_out.hpp {boost::array<char, ...> recv_buffer_} field when chaning this number
PUBLISHER_NAME_TARGETVIZ: "/TargetVizComm/msg_received" # Messege ROS publisher name (ROSSideIn received)
SUBSCRIBER_NAME_TARGETVIZ: "/TargetVizComm/msg_to_send" # Messege ROS subscriber name (ROSSideOut to send)
SUBSCRIBER_HIF_NAME_TARGETVIZ: "/TargetVizComm/msg_to_send_hi_f" # Messege ROS subscriber name (ROSSideOut to send at high frequency)
VERBOSE_TARGETVIZ: 1
VERBOSE_HIF_TARGETVIZ: 0

# XR module communication configs

PORT_OUT_NNBLC_XR: 8051
IP_OUT_NNBLC_XR: "10.203.127.96"
MSG_SIZE_XR: 256
SUBSCRIBER_HIF_NAME_XR: "/XRComm/msg_to_send_hi_f"
VERBOSE_HIF_XR: 0
